---
description: Docker container development patterns, Chrome dependencies for Remotion, security best practices, and common commands
globs: Dockerfile,docker-compose.yml,render.mjs
---
# Docker Development Patterns

## Container Structure
- **Base Image**: `node:22-bookworm-slim` with Chrome dependencies
- **Working Directory**: `/usr/src/app`
- **User**: Non-root user (`nodejs`) for security
- **Output**: `/usr/src/app/out` with proper permissions

## Chrome Dependencies
Essential for Remotion rendering:
```dockerfile
RUN apt install -y \
  libnss3 libdbus-1-3 libatk1.0-0 libgbm-dev \
  libasound2 libxrandr2 libxkbcommon-dev libxfixes3 \
  libxcomposite1 libxdamage1 libatk-bridge2.0-0 \
  libpango-1.0-0 libcairo2 libcups2
```

## Development vs Production
- **Development**: `docker-compose up remotion-dev` (hot reload)
- **Production**: `docker-compose up remotion-render` (video generation)

## Environment Variables
Video parameters are passed as environment variables:
```bash
-e TITLE="Hello World" \
-e SUBTITLE="Welcome to Remotion" \
-e CONTENT_HEADER="Discover More" \
-e OUTRO_MESSAGE="Thank You!"
```

## Volume Mounts
- **Development**: Source code mounted for hot reload
- **Production**: Output directory mounted for video files

## Security Best Practices
- Non-root user execution
- Minimal base image
- Proper file permissions
- No secrets in Dockerfile

## File References
- [Dockerfile](mdc:Dockerfile) - Production container definition
- [docker-compose.yml](mdc:docker-compose.yml) - Development and render services
- [render.mjs](mdc:render.mjs) - Video rendering script
- [scripts/build-and-push.sh](mdc:scripts/build-and-push.sh) - Local build script
- [scripts/test-local.sh](mdc:scripts/test-local.sh) - Local testing script

## Common Commands
```bash
# Development
docker-compose up remotion-dev

# Render video
docker-compose up remotion-render

# Build and push
./scripts/build-and-push.sh v1.0.0

# Test locally
./scripts/test-local.sh "Custom Title" "Custom Subtitle"
```
